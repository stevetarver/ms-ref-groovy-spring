{
	"info": {
		"_postman_id": "d3c984d5-6466-4147-af97-955b03ed22d0",
		"name": "ms-ref-groovy-spring smoke test",
		"description": "Provides basic api exercise with validation. May be run in a loop for load testing.\n\nNOTES:\n* Requires selecting an environment appropriate for the target\n* Requires a fresh mongo-sample-data container",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. get all contacts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb140758-9331-4afc-b95f-94de6c732c41",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 800ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(800);",
							"});",
							"",
							"postman.setEnvironmentVariable(\"initial_collection_size\", pm.response.json().length);",
							"",
							"console.log(\"Initial collection size: \" + pm.response.json().length);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "http://{{host}}/v3/starter/groovy/contacts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"starter",
						"groovy",
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. create a contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9065f755-d832-4fb2-97b2-780d1f9f1e59",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"pm.test(\"Response contains a single result\", function () {",
							"    pm.expect(pm.response.json()).to.not.be.a('array');",
							"});",
							"",
							"pm.test(\"Returned contact matches request\", function () {",
							"    var orig = JSON.parse(postman.getEnvironmentVariable(\"create_contact_info\"));",
							"    var resp = pm.response.json();",
							"    pm.expect(resp.firstName).to.equal(orig.firstName);",
							"    pm.expect(resp.lastName).to.equal(orig.lastName);",
							"    pm.expect(resp.companyName).to.equal(orig.companyName);",
							"    pm.expect(resp.address).to.equal(orig.address);",
							"    pm.expect(resp.city).to.equal(orig.city);",
							"    pm.expect(resp.county).to.equal(orig.county);",
							"    pm.expect(resp.state).to.equal(orig.state);",
							"    pm.expect(resp.zip).to.equal(orig.zip);",
							"    pm.expect(resp.phone1).to.equal(orig.phone1);",
							"    pm.expect(resp.phone2).to.equal(orig.phone2);",
							"    pm.expect(resp.email).to.equal(orig.email);",
							"    pm.expect(resp.website).to.equal(orig.website);",
							"});",
							"",
							"",
							"postman.setEnvironmentVariable(\"created_contact_id\", pm.response.json().id);",
							"",
							"console.log(\"Created contact: \" + pm.response.json().id);"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6aa56114-642a-4070-b37d-77272e9d3637",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable(\"create_contact_info\", ",
							"`{",
							"    \"firstName\": \"Leroy\",",
							"    \"lastName\": \"Jenkins\",",
							"    \"companyName\": \"Docker Publishing Company\",",
							"    \"address\": \"1 Solutions Parkway\",",
							"    \"city\": \"Town & Country\",",
							"    \"county\": \"Chesterfield\",",
							"    \"state\": \"MO\",",
							"    \"zip\": \"63011\",",
							"    \"phone1\": \"855-226-0709\",",
							"    \"phone2\": \"888-638-6771\",",
							"    \"email\": \"leroy.jenkins@makara.io\",",
							"    \"website\": \"http://www.makara.io\"",
							"}`);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{create_contact_info}}"
				},
				"url": {
					"raw": "http://{{host}}/v3/starter/groovy/contacts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"starter",
						"groovy",
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. get the created contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db0b0923-cc29-40bc-a5ac-1d9ab8e5bf24",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Created contact matches request\", function () {",
							"    var orig = JSON.parse(postman.getEnvironmentVariable(\"create_contact_info\"));",
							"    var resp = pm.response.json();",
							"    pm.expect(resp.firstName).to.equal(orig.firstName);",
							"    pm.expect(resp.lastName).to.equal(orig.lastName);",
							"    pm.expect(resp.companyName).to.equal(orig.companyName);",
							"    pm.expect(resp.address).to.equal(orig.address);",
							"    pm.expect(resp.city).to.equal(orig.city);",
							"    pm.expect(resp.county).to.equal(orig.county);",
							"    pm.expect(resp.state).to.equal(orig.state);",
							"    pm.expect(resp.zip).to.equal(orig.zip);",
							"    pm.expect(resp.phone1).to.equal(orig.phone1);",
							"    pm.expect(resp.phone2).to.equal(orig.phone2);",
							"    pm.expect(resp.email).to.equal(orig.email);",
							"    pm.expect(resp.website).to.equal(orig.website);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Leroy\",\n    \"lastName\": \"Jenkins\",\n    \"companyName\": \"Docker Publishing Company\",\n    \"address\": \"1 Solutions Parkway\",\n    \"city\": \"Town & Country\",\n    \"county\": \"Chesterfield\",\n    \"state\": \"MO\",\n    \"zip\": \"63011\",\n    \"phone1\": \"855-226-0709\",\n    \"phone2\": \"888-638-6771\",\n    \"email\": \"leroy.jenkins@makara.io\",\n    \"website\": \"http://www.makara.io\"\n}\n"
				},
				"url": {
					"raw": "http://{{host}}/v3/starter/groovy/contacts/{{created_contact_id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"starter",
						"groovy",
						"contacts",
						"{{created_contact_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. update the created contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1cdb3d16-57c8-459e-aef4-01c7bcd9e4ba",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Contact patch applied correctly\", function () {",
							"    var orig = JSON.parse(postman.getEnvironmentVariable(\"create_contact_info\"));",
							"    var patch = JSON.parse(postman.getEnvironmentVariable(\"update_contact_info\"));",
							"    var resp = pm.response.json();",
							"    pm.expect(resp.firstName).to.equal(patch.firstName);",
							"    pm.expect(resp.lastName).to.equal(orig.lastName);",
							"    pm.expect(resp.companyName).to.equal(patch.companyName);",
							"    pm.expect(resp.address).to.equal(orig.address);",
							"    pm.expect(resp.city).to.equal(orig.city);",
							"    pm.expect(resp.county).to.equal(orig.county);",
							"    pm.expect(resp.state).to.equal(orig.state);",
							"    pm.expect(resp.zip).to.equal(orig.zip);",
							"    pm.expect(resp.phone1).to.equal(orig.phone1);",
							"    pm.expect(resp.phone2).to.equal(orig.phone2);",
							"    pm.expect(resp.email).to.equal(patch.email);",
							"    pm.expect(resp.website).to.equal(orig.website);",
							"});",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "98af4b2a-b82c-400c-aa88-bfb57aeee056",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable(\"update_contact_info\", ",
							"`{",
							"    \"firstName\": \"Lester\",",
							"    \"companyName\": \"Docker Composing Company\",",
							"    \"email\": \"lester.jenkins@makara.io\"",
							"}`);",
							""
						]
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{update_contact_info}}"
				},
				"url": {
					"raw": "http://{{host}}/v3/starter/groovy/contacts/{{created_contact_id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"starter",
						"groovy",
						"contacts",
						"{{created_contact_id}}"
					]
				},
				"description": "Modify a couple of contact attributes"
			},
			"response": []
		},
		{
			"name": "5. replace the created contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10b74a86-5b20-4888-9c1e-34ab2ad960fc",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Replaced contact matches request\", function () {",
							"    var orig = JSON.parse(postman.getEnvironmentVariable(\"replace_contact_info\"));",
							"    var resp = pm.response.json();",
							"    pm.expect(resp.firstName).to.equal(orig.firstName);",
							"    pm.expect(resp.lastName).to.equal(orig.lastName);",
							"    pm.expect(resp.companyName).to.equal(orig.companyName);",
							"    pm.expect(resp.address).to.equal(orig.address);",
							"    pm.expect(resp.city).to.equal(orig.city);",
							"    pm.expect(resp.county).to.equal(orig.county);",
							"    pm.expect(resp.state).to.equal(orig.state);",
							"    pm.expect(resp.zip).to.equal(orig.zip);",
							"    pm.expect(resp.phone1).to.equal(orig.phone1);",
							"    pm.expect(resp.phone2).to.equal(orig.phone2);",
							"    pm.expect(resp.email).to.equal(orig.email);",
							"    pm.expect(resp.website).to.equal(orig.website);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7a1ab1c4-517a-4b0e-8867-4ce6df5f06a2",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable(\"replace_contact_info\", ",
							"`{",
							"    \"firstName\": \"Buster\",",
							"    \"lastName\": \"Hamilton\",",
							"    \"companyName\": \"CoreOS Rocket Manufacturing\",",
							"    \"address\": \"101 New Montgomery\",",
							"    \"city\": \"San Francisco\",",
							"    \"county\": \"Los Angeles\",",
							"    \"state\": \"CA\",",
							"    \"zip\": \"94105\",",
							"    \"phone1\": \"(800) 774-3507\",",
							"    \"phone2\": \"(800) 774-3508\",",
							"    \"email\": \"bhamilton@coreos.com\",",
							"    \"website\": \"https://coreos.com\"",
							"}`);",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{replace_contact_info}}"
				},
				"url": {
					"raw": "http://{{host}}/v3/starter/groovy/contacts/{{created_contact_id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"starter",
						"groovy",
						"contacts",
						"{{created_contact_id}}"
					]
				},
				"description": "Replace an existing contact with new data"
			},
			"response": []
		},
		{
			"name": "6. delete the created contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0aa21e56-a891-46a6-9779-9baf5ab8c631",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/v3/starter/groovy/contacts/{{created_contact_id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"starter",
						"groovy",
						"contacts",
						"{{created_contact_id}}"
					]
				},
				"description": "Delete our created contact"
			},
			"response": []
		},
		{
			"name": "7. get the deleted contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "878646a6-eea6-4ab3-b5ab-f71ed5a18b4c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Contact is not found\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Response is an errors list\", function () {",
							"    pm.expect(pm.response.json().errors).to.be.a('array');",
							"});",
							"",
							"pm.test(\"Response identifies contact by id\", function() {",
							"    var contactId = postman.getEnvironmentVariable(\"created_contact_id\");",
							"    pm.expect(pm.response.text()).to.include(contactId);",
							"});",
							"",
							"pm.test(\"Response error object is valid json:api\", function() {",
							"    var data = pm.response.json().errors[0];",
							"    pm.expect(data.title).to.equal(\"Not Found\");",
							"    pm.expect(data.detail).to.include(\"There is no item\");",
							"    pm.expect(data.status).to.equal(\"404\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Leroy\",\n    \"lastName\": \"Jenkins\",\n    \"companyName\": \"Docker Publishing Company\",\n    \"address\": \"1 Solutions Parkway\",\n    \"city\": \"Town & Country\",\n    \"county\": \"Chesterfield\",\n    \"state\": \"MO\",\n    \"zip\": \"63011\",\n    \"phone1\": \"855-226-0709\",\n    \"phone2\": \"888-638-6771\",\n    \"email\": \"leroy.jenkins@makara.io\",\n    \"website\": \"http://www.makara.io\"\n}\n"
				},
				"url": {
					"raw": "http://{{host}}/v3/starter/groovy/contacts/{{created_contact_id}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"starter",
						"groovy",
						"contacts",
						"{{created_contact_id}}"
					]
				},
				"description": "Get the deleted contact to ensure it has been deleted"
			},
			"response": []
		},
		{
			"name": "8. get all contacts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "47be365d-90c9-458d-aac9-002474b0e6df",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 800ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(800);",
							"});",
							"",
							"pm.test(\"Contacts collection returned to initial size after delete\", function () {",
							"    var initialSize = +(postman.getEnvironmentVariable(\"initial_collection_size\"));",
							"    pm.expect(pm.response.json().length).to.equal(initialSize);",
							"});",
							"",
							"console.log(\"Cleaning up environment for next run\");",
							"postman.clearEnvironmentVariable(\"create_contact_info\");",
							"postman.clearEnvironmentVariable(\"created_contact_id\");",
							"postman.clearEnvironmentVariable(\"replace_contact_info\");",
							"postman.clearEnvironmentVariable(\"update_contact_info\");",
							"postman.clearEnvironmentVariable(\"initial_collection_size\");",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "http://{{host}}/v3/starter/groovy/contacts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"starter",
						"groovy",
						"contacts"
					]
				}
			},
			"response": []
		}
	]
}